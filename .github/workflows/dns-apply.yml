name: DNS Apply (Terraform)

on:
  workflow_call:
    inputs:
      vps_manager_repo:
        description: "Owner/Repo of vps-manager containing Terraform code"
        required: false
        type: string
        default: "yarden-zamir/vps-manager"
      records_json:
        description: "JSON string with { records: [...] } matching dns/terraform schema"
        required: false
        type: string
      records_path:
        description: "Path in caller repo to a JSON file containing { records: [...] }"
        required: false
        type: string
      dns_provider:
        description: "DNS provider to target (netlify|cloudflare|digitalocean|linode)"
        required: true
        type: string
      state_path:
        description: "Path in caller repo to store terraform state"
        required: false
        type: string
        default: ".dns-tfstate/terraform.tfstate"
    secrets:
      DNS_PROVIDER_TOKEN:
        required: true

permissions:
  contents: read

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout caller repo
        uses: actions/checkout@v4

      - name: Checkout vps-manager repo (Terraform code)
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.vps_manager_repo }}
          path: vps-manager

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Use records from path
        if: ${{ inputs.records_path != '' }}
        run: |
          cp "${{ inputs.records_path }}" vps-manager/dns/terraform/netlify/records.auto.tfvars.json

      - name: Write records.auto.tfvars.json (inline)
        if: ${{ inputs.records_path == '' && inputs.records_json != '' }}
        run: |
          cat > vps-manager/dns/terraform/netlify/records.auto.tfvars.json <<'JSON'
          ${{ inputs.records_json }}
          JSON

      - name: Ensure state dir
        run: |
          mkdir -p "$(dirname '${{ inputs.state_path }}')"

      - name: Terraform Init (Netlify)
        env:
          TF_VAR_dns_provider: ${{ inputs.dns_provider }}
          TF_VAR_dns_provider_token: ${{ secrets.DNS_PROVIDER_TOKEN }}
        run: |
          terraform -chdir=vps-manager/dns/terraform/netlify init -input=false -reconfigure -backend-config="path=${{ github.workspace }}/${{ inputs.state_path }}"

      - name: Terraform Apply (Netlify)
        env:
          TF_VAR_dns_provider: ${{ inputs.dns_provider }}
          TF_VAR_dns_provider_token: ${{ secrets.DNS_PROVIDER_TOKEN }}
        run: |
          terraform -chdir=vps-manager/dns/terraform/netlify apply -input=false -auto-approve -no-color
